services:
  api1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rinha_api1
    hostname: api1
    network_mode: host
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      APP_PORT: "8081"
      DB_CONNECTION_STRING: "Host=localhost;Port=5432;Database=rinha_db;Username=sample_user;Password=sample_password;"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  api2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rinha_api2
    hostname: api2
    network_mode: host
    depends_on:
      postgres_db:
        condition: service_healthy
    environment:
      APP_PORT: "8082"
      DB_CONNECTION_STRING: "Host=localhost;Port=5432;Database=rinha_db;Username=sample_user;Password=sample_password;"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"

  nginx:
    image: nginx:alpine
    container_name: rinha_nginx
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api1
      - api2
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"

  postgres_db:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_USER: sample_user
      POSTGRES_PASSWORD: sample_password
      POSTGRES_DB: rinha_db
    network_mode: host
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sample_user -d rinha_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1G"

volumes:
  postgres_data:
